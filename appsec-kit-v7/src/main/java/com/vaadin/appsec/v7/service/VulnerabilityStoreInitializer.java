/*
 * -
 * Copyright (C) 2023 Vaadin Ltd
 *
 * This program is available under Vaadin Commercial License and Service Terms.
 *
 *
 * See <https://vaadin.com/commercial-license-and-service-terms> for the full license.
 */

package com.vaadin.appsec.v7.service;

import java.util.List;

import org.cyclonedx.model.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.vaadin.appsec.backend.model.osv.response.OpenSourceVulnerability;
import com.vaadin.appsec.backend.service.BillOfMaterialsStore;
import com.vaadin.appsec.backend.service.OpenSourceVulnerabilityService;
import com.vaadin.appsec.backend.service.VulnerabilityStore;
import com.vaadin.server.VaadinService;

/**
 * A class for initializing the vulnerabilities store.
 */
public class VulnerabilityStoreInitializer extends AbstractInitializer {
    private static final Logger LOGGER = LoggerFactory
            .getLogger(VulnerabilityStoreInitializer.class);
    private static boolean initialized;

    /**
     * Initializes the vulnerabilities store service
     *
     * @param vaadinService
     *            current VaadinService instance
     */
    static void serviceInit(VaadinService vaadinService) {
        if (isDebugMode(vaadinService) && !initialized) {
            OpenSourceVulnerabilityService osvService = new OpenSourceVulnerabilityService();
            List<Component> components = BillOfMaterialsStore.getInstance()
                    .getBom().getComponents();
            List<OpenSourceVulnerability> vulnerabilities = osvService
                    .getVulnerabilities(components);
            VulnerabilityStore.getInstance().init(vulnerabilities);
            initialized = true;
            LOGGER.debug("VulnerabilityStoreInitListener initialized.");
        }
    }
<<<<<<< HEAD

    static void reset() {
        initialized = false;
        VulnerabilityStore.getInstance().init(null);
    }
=======
>>>>>>> dd08b2b (Add Vaadin 7 version)
}
