/*-
 * Copyright (C) 2023 Vaadin Ltd
 *
 * This program is available under Vaadin Commercial License and Service Terms.
 *
 *
 * See <https://vaadin.com/commercial-license-and-service-terms> for the full license.
 */
package com.vaadin.appsec.backend;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.cyclonedx.model.Bom;
import org.cyclonedx.model.Component;
import org.junit.Before;
import org.junit.Test;

import com.vaadin.appsec.backend.model.osv.response.Ecosystem;
import com.vaadin.appsec.backend.model.osv.response.OpenSourceVulnerability;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class VulnerabilityStoreTest {

    private VulnerabilityStore vulnerabilityStore;

    @Before
    public void setup() {
        BillOfMaterialsStore bomStore = mock(BillOfMaterialsStore.class);
        Bom bom = new Bom();
        List<Component> components = Collections.singletonList(new Component());
        bom.setComponents(components);
        when(bomStore.getBom(Ecosystem.MAVEN)).thenReturn(bom);

        OpenSourceVulnerabilityService osvService = mock(
                OpenSourceVulnerabilityService.class);
        when(osvService.getVulnerabilities(components))
                .thenReturn(createVulnerabilities());

        vulnerabilityStore = new VulnerabilityStore(osvService, bomStore);
    }

    @Test
    public void getVulnerabilities_returnsVulnerabilities() {
        vulnerabilityStore.init(createVulnerabilities());

        List<OpenSourceVulnerability> vulns = vulnerabilityStore
                .getVulnerabilities();

        assertEquals(2, vulns.size());
    }

    @Test
    public void refresh_updatesVulnerabilities() {
        List<OpenSourceVulnerability> vulns = vulnerabilityStore.refresh();

        assertEquals(2, vulns.size());
    }

    private List<OpenSourceVulnerability> createVulnerabilities() {
        OpenSourceVulnerability vuln1 = new OpenSourceVulnerability();
        vuln1.setId("1");
        OpenSourceVulnerability vuln2 = new OpenSourceVulnerability();
        vuln2.setId("2");
        return new ArrayList<>(Arrays.asList(vuln1, vuln2));
    }
}
