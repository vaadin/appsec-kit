package com.vaadin.appsec.service;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.ObjectMapper;

import com.vaadin.appsec.model.osv.request.QueryBatchRequestPayload;
import com.vaadin.appsec.model.osv.response.OpenSourceVulnerability;
import com.vaadin.appsec.model.osv.response.QueryBatchResponse;

public class OpenSourceVulnerabilityClient {

    private static final String QUERY_BATCH_URL = "https://api.osv.dev/v1/querybatch";
    private static final String VULNERABILITY_URL = "https://api.osv.dev/v1/vulns/";

    private final ObjectMapper mapper = new ObjectMapper()
            .setSerializationInclusion(JsonInclude.Include.NON_NULL);

    public Optional<QueryBatchResponse> queryBatch(QueryBatchRequestPayload payload) {
        HttpURLConnection conn = createHttpURLConnection(QUERY_BATCH_URL, "POST");

        try (OutputStream outputStream = conn.getOutputStream()) {
            mapper.writeValue(outputStream, payload);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        try (InputStream inputStream = conn.getInputStream()) {
            return Optional.of(mapper.readValue(inputStream, QueryBatchResponse.class));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public Optional<OpenSourceVulnerability> queryVulnerability(String vulnerabilityId) {
        String urlWithId = VULNERABILITY_URL.concat(vulnerabilityId);
        HttpURLConnection conn = createHttpURLConnection(urlWithId, "GET");

        try (InputStream inputStream = conn.getInputStream()) {
            return Optional.of(mapper.readValue(inputStream, OpenSourceVulnerability.class));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    private HttpURLConnection createHttpURLConnection(String urlStr, String requestMethod) {
        HttpURLConnection connection;
        try {
            URL url = new URL(urlStr);
            connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod(requestMethod);
            connection.setRequestProperty("Content-Type", "application/json");
            connection.setRequestProperty("Accept", "application/json");
            connection.setDoOutput(true);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return connection;
    }
}
