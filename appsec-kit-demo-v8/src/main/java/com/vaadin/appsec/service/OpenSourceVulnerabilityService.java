package com.vaadin.appsec.service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.util.Optional;

import com.fasterxml.jackson.databind.ObjectMapper;

import com.vaadin.appsec.model.osv.OpenSourceVulnerabilityModel;

public class OpenSourceVulnerabilityService {

    private static final String QUERY_URL = "https://api.osv.dev/v1/query";

    public Optional<OpenSourceVulnerabilityModel> query() throws IOException {
        URL url = new URL(QUERY_URL);
        HttpURLConnection con = (HttpURLConnection) url.openConnection();
        con.setRequestMethod("POST");
        con.setRequestProperty("Content-Type", "application/json");
        con.setRequestProperty("Accept", "application/json");
        con.setDoOutput(true);

        String jsonInputString = "{\n" +
                "  \"version\": \"2.4.8\",\n" +
                "  \"package\": {\n" +
                "    \"name\": \"net.minidev:json-smart\",\n" +
                "    \"ecosystem\": \"Maven\",\n" +
                "    \"purl\": \"pkg:maven/net.minidev/json-smart@2.4.8\"\n" +
                "  }\n" +
                "}";

        try (OutputStream os = con.getOutputStream()) {
            byte[] input = jsonInputString.getBytes(StandardCharsets.UTF_8);
            os.write(input, 0, input.length);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        try (BufferedReader br = new BufferedReader(
                new InputStreamReader(con.getInputStream(), StandardCharsets.UTF_8))) {
            ObjectMapper mapper = new ObjectMapper();
            return Optional.of(mapper.readValue(br, OpenSourceVulnerabilityModel.class));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
