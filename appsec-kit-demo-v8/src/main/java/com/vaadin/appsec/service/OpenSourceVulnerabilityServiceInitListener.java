package com.vaadin.appsec.service;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.vaadin.appsec.model.osv.OpenSourceVulnerabilityModel;
import com.vaadin.appsec.model.osv.Vulnerability;
import com.vaadin.server.ServiceInitEvent;
import com.vaadin.server.VaadinServiceInitListener;

public class OpenSourceVulnerabilityServiceInitListener implements VaadinServiceInitListener {

    private static final Logger LOGGER = LoggerFactory.getLogger(OpenSourceVulnerabilityServiceInitListener.class);

    @Override
    public void serviceInit(ServiceInitEvent event) {
        List<Vulnerability> vulnerabilities = new ArrayList<>();
        OpenSourceVulnerabilityService openSourceVulnerabilityService = new OpenSourceVulnerabilityService();
        try {
            Optional<OpenSourceVulnerabilityModel> osvModel = openSourceVulnerabilityService.query();
            osvModel.ifPresent(model -> vulnerabilities.addAll(Arrays.asList(model.getVulnerabilities())));
            VulnerabilityStore.getInstance().init(vulnerabilities);
        } catch (IOException e) {
            LOGGER.error("Error during OSV API query.", e);
        }
    }
}
